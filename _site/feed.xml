<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>SwanseaCon 2016 - Agile Development &amp; Software Craftsmanship conference</title>
    <description>SwanseaCon is an agile development &amp; software craftsmanship conference</description>
    <link>http://swanseacon.github.io/</link>
    <atom:link href="http://swanseacon.github.io/feed.xml" rel="self" type="application/rss+xml" />
    
      <item>
        <title>Call for speakers is now closed</title>
        <description>&lt;h4 id=&quot;call-for-speakers-is-now-closed&quot;&gt;Call for speakers is now closed.&lt;/h4&gt;

&lt;p&gt;The response to our call for speakers has been amazing, we received over 100 submissions from all over the world.&lt;/p&gt;

&lt;p&gt;Our first conference in 2015 saw 2 keynotes, over 20 presentations and a panel discussion. This year we’ve tried to offer even greater value for money and to give attendees an even better opportunity to learn and share knowledge. There will be an opening and closing keynote by Simon Brown and Sander Hoogendoorn as well as two different tracks containing tutorials, hands on sessions, as well as presentations.&lt;/p&gt;

&lt;p&gt;SwanseaCon 2016 is aimed at software developers, software architects, project managers, analysts and consultants.&lt;/p&gt;

&lt;p&gt;The event will have a strong practical focus on agile development, software craftsmanship, teams and business, to ensure participants have the opportunity to learn new approaches they can immediately apply in their work.&lt;/p&gt;

&lt;h5 id=&quot;earl-bird-tickets&quot;&gt;Earl bird tickets&lt;/h5&gt;

&lt;p&gt;We still have early bird tickets on sale until the end of March which offers you £200 off a standard ticket. Tickets include access to both days (Monday 12th- Tuesday 13th), breakfast, lunch, tea/coffee, and access to the evening reception on Monday 12th September.&lt;/p&gt;

&lt;p&gt;Don’t miss out on the chance to snap up a ticket for possibly the cheapest agile and developer conference you’ll attend this year. Once the early bird tickets are gone or the deadline passes that’s it!&lt;/p&gt;

&lt;h5 id=&quot;for-more-advice-or-information&quot;&gt;For more advice or information&lt;/h5&gt;

&lt;p&gt;We’d love to hear from you.&lt;/p&gt;

&lt;p&gt;hello@swanseacon.co.uk&lt;/p&gt;

&lt;p&gt;07722 328 233&lt;/p&gt;

&lt;p&gt;twitter.com/SwanseaCon&lt;/p&gt;
</description>
        <pubDate>Tue, 16 Feb 2016 20:19:00 +0000</pubDate>
        <link>http://swanseacon.github.io/blog/call-for-speakers-now-closed</link>
        <guid isPermaLink="true">http://swanseacon.github.io/blog/call-for-speakers-now-closed</guid>
      </item>
    
      <item>
        <title>Call for speakers is now open</title>
        <description>&lt;h4 id=&quot;call-for-speakers-is-now-open&quot;&gt;Call for speakers is now open.&lt;/h4&gt;

&lt;p&gt;We’re really pleased to announce that after a really successful first conference we’re going to do it all over again 12-13th September, 2016.&lt;/p&gt;

&lt;p&gt;SwanseaCon is aimed at software developers, software architects, project managers, analysts and consultants.&lt;/p&gt;

&lt;p&gt;The event has a strong practical focus on agile development, software craftsmanship, teams and business, to ensure participants have the opportunity to learn new approaches they can immediately apply in their work.&lt;/p&gt;

&lt;p&gt;Some of our previous attendees have held the following positions:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Software Engineer&lt;/li&gt;
  &lt;li&gt;Senior Consultant&lt;/li&gt;
  &lt;li&gt;Software Craftsman&lt;/li&gt;
  &lt;li&gt;Lead Software Engineer&lt;/li&gt;
  &lt;li&gt;Professor&lt;/li&gt;
  &lt;li&gt;Entrepreneur&lt;/li&gt;
  &lt;li&gt;Apprentice&lt;/li&gt;
  &lt;li&gt;Trainer&lt;/li&gt;
  &lt;li&gt;Delivery Director&lt;/li&gt;
  &lt;li&gt;Software Architect&lt;/li&gt;
  &lt;li&gt;Services Engineer&lt;/li&gt;
  &lt;li&gt;Scrum Master&lt;/li&gt;
  &lt;li&gt;Director of Digital Services&lt;/li&gt;
  &lt;li&gt;Blogger&lt;/li&gt;
&lt;/ul&gt;

&lt;h5 id=&quot;sessions&quot;&gt;Sessions&lt;/h5&gt;

&lt;p&gt;We’re happy for you to stand up and present a talk about your experiences or something you’ve done, but we also strongly encourage interactive sessions that generate conversation with the audience, group discussion, or hands-on experiences.&lt;/p&gt;

&lt;p&gt;There is no limit to the number of sessions you can submit. Upon submission you will need to select a category which loosely describes your session; presentation, tutorial (includes some group activities), hands-on (practical session - on laptops etc), panel discussion or if your unsure you can enter your own. You will also be able to select how long in length your session will be, we may however have to ask you to vary your session length so it fits into our finished programme.&lt;/p&gt;

&lt;h5 id=&quot;speaker-support&quot;&gt;Speaker support&lt;/h5&gt;

&lt;p&gt;What’s included&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;2 nights hotel stay (night before your session/night after)&lt;/li&gt;
  &lt;li&gt;Participation in the full event programme&lt;/li&gt;
  &lt;li&gt;Lunch on each day you attend&lt;/li&gt;
  &lt;li&gt;Refreshments with delegates at designated times&lt;/li&gt;
  &lt;li&gt;Free wi-fi at the conference venue&lt;/li&gt;
  &lt;li&gt;Delegate pack&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Anything not listed above is not included.
Contact us about any specific requests.&lt;/p&gt;

&lt;h6 id=&quot;expenses&quot;&gt;Expenses&lt;/h6&gt;

&lt;p&gt;Although our general policy is not to cover speaker expenses we do have some money to help speakers who are personally funding their own way to SwanseaCon - we would strongly prefer to direct this money to those who most need this support.&lt;/p&gt;

&lt;p&gt;We’ll provide flip charts, pens, a/v equiptment etc. but we can also help fund anything out of the ordinary you need to make your session more valuable to your participants and yourelf.&lt;/p&gt;

&lt;p&gt;Please let us know on your session proposal whether you need this support to take part in the conference, and, if possible, roughly how much money you’d need to claim from us. (To give you a rough idea, overnight accomodation in the city costs from £79 upwards per night).&lt;/p&gt;

&lt;p&gt;Unfortunately we can’t reimburse expenses that we haven’t agreed to pay in advance of the event.&lt;/p&gt;

&lt;h5 id=&quot;session-reviews&quot;&gt;Session reviews&lt;/h5&gt;

&lt;p&gt;After the deadline closes, our selection panel will review all submissions anonymously.&lt;/p&gt;

&lt;p&gt;The review process usually takes between 2 and 3 weeks depending on the volume of submissions. We’ll contact both successful and unsuccessful candidates within the review period.&lt;/p&gt;

&lt;p&gt;If you’re ready to submit a session for consideration, please visit:
&lt;a href=&quot;http://www.swanseacon.co.uk/call-for-speakers&quot;&gt;http://www.swanseacon.co.uk/call-for-speakers&lt;/a&gt;&lt;/p&gt;

&lt;h5 id=&quot;for-more-advice-or-information&quot;&gt;For more advice or information&lt;/h5&gt;

&lt;p&gt;We’re happy to provide further advice if you need more help before submitting your session.&lt;/p&gt;

&lt;p&gt;hello@swanseacon.co.uk/call-for-speakers&lt;/p&gt;

&lt;p&gt;07722 328 233&lt;/p&gt;

&lt;p&gt;twitter.com/SwanseaCon&lt;/p&gt;
</description>
        <pubDate>Sun, 15 Nov 2015 14:41:37 +0000</pubDate>
        <link>http://swanseacon.github.io/blog/call-for-speakers-now-open</link>
        <guid isPermaLink="true">http://swanseacon.github.io/blog/call-for-speakers-now-open</guid>
      </item>
    
      <item>
        <title>Thank you for attending SwanseaCon 2015</title>
        <description>&lt;h4 id=&quot;prynhawn-dagood-afternoon&quot;&gt;Prynhawn da/Good afternoon,&lt;/h4&gt;

&lt;p&gt;We really hope you enjoyed SwanseaCon 2015 and we just wanted to write a quick post to say a massive thank you for coming along and being a part of it!&lt;/p&gt;

&lt;p&gt;The feedback so far has been excellent and we’re already looking at ways to implement some of the suggestions. If you didn’t get a chance to leave feedback we’d love to know your thoughts so please &lt;a href=&quot;&amp;#109;&amp;#097;&amp;#105;&amp;#108;&amp;#116;&amp;#111;:&amp;#104;&amp;#101;&amp;#108;&amp;#108;&amp;#111;&amp;#064;&amp;#115;&amp;#119;&amp;#097;&amp;#110;&amp;#115;&amp;#101;&amp;#097;&amp;#099;&amp;#111;&amp;#110;&amp;#046;&amp;#099;&amp;#111;&amp;#046;&amp;#117;&amp;#107;&amp;#063;&amp;#102;&amp;#101;&amp;#101;&amp;#100;&amp;#098;&amp;#097;&amp;#099;&amp;#107;&quot;&gt;get in touch&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;We had lots of photographs of both days taken, &lt;a href=&quot;https://www.flickr.com/photos/136328291@N04&quot;&gt;click here to view photos from SwanseaCon 2015&lt;/a&gt;. We recorded nearly all the speaker sessions so we will let you know as soon as these are available online for you to take a look.&lt;/p&gt;

&lt;p&gt;Speakers have already started posting links to their slides which you can find below:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;http://www.codingthearchitecture.com/presentations/swanseacon2015-software-architecture-vs-code&quot;&gt;Simon Brown - Software architecture vs code&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;http://www.slideshare.net/christosmatskas/common-mistakes-in-tdd-can-you-guess&quot;&gt;Christos Matskas - Common mistakes in tdd can you guess&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;http://www.slideshare.net/marcello.duarte/understanding-craftsmanship-swanseacon2015-52546920&quot;&gt;Marcello Duarte - Understanding Craftsmanship&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;http://www.slideshare.net/RachelDavies/swanseacon-closing-keynote&quot;&gt;Rachel Davies - Swanseacon Closing Keynote&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;http://talks.samirtalwar.com/use-your-type-system.html&quot;&gt;Samir Talwar - Use Your Type System; Write Less Code&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;http://www.slideshare.net/valtechuk/leanux-and-agile-in-the-public-sector&quot;&gt;Kevin Murray - LeanUX and Agile in the Public Sector&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;http://slides.com/franziskasauerwein/refactoring#/&quot;&gt;Erik Talboom &amp;amp; Franzi SauerWein - Refactoring mount doom&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;http://www.codemanship.co.uk/files/ContinuousInspection.pdf&quot;&gt;Jason Gorman - Continous Inspection&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://speakerdeck.com/tooky/surrender-the-illusion-of-control&quot;&gt;Steve Tooke - Surrender the Illusion of Control&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;http://www.slideshare.net/adibolb/legacy-code-is-fear-swanseacon-08-09-2015&quot;&gt;Adrian Bolboaca - Legacy Code is Fear&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;http://www.slideshare.net/aahoogendoorn/microservices-stairway-to-heaven-or-highway-to-hell&quot;&gt;Sander Hoogendoorn - Designing and building a micro-services architecture. Stairway to heaven or a highway to hell?&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Thank you once again for being a part of our first conference, we’re already planning next year’s event which will run Monday 12th - Tuesday 13th September 2016. Super early bird tickets are available now, enabling all this years attendees to come along for just £125!&lt;/p&gt;

&lt;p&gt;We hope to see you next year!&lt;/p&gt;

&lt;p&gt;Diolch/Thank you,&lt;/p&gt;

&lt;p&gt;The SwanseaCon team&lt;/p&gt;

&lt;h4 id=&quot;did-you-enjoy-this-post&quot;&gt;Did you enjoy this post?&lt;/h4&gt;

&lt;p&gt;You can get all the latest news and updates about next years conference over on &lt;a href=&quot;http://www.twitter.com/swanseacon&quot;&gt;our twitter account&lt;/a&gt;.&lt;/p&gt;
</description>
        <pubDate>Mon, 14 Sep 2015 14:43:18 +0100</pubDate>
        <link>http://swanseacon.github.io/blog/thank-you-for-attending-swaneacon-2015</link>
        <guid isPermaLink="true">http://swanseacon.github.io/blog/thank-you-for-attending-swaneacon-2015</guid>
      </item>
    
      <item>
        <title>Patroklos Papapetrou - Managing global teams</title>
        <description>&lt;h4 id=&quot;managing-global-teams&quot;&gt;Managing global teams.&lt;/h4&gt;

&lt;p&gt;One year ago I took the most challenging decision of my software development career. I quit my daily - 40hr/week job and joined a company as a remote freelancer. That change was even more radical because I made the switch from a hands-on developer role to a “software engineering manager” role. Although I don’t like the term “engineer” for software development, that’s my current role/job description. My key responsibilities are around managing many development teams by focusing on automation and quality. What’s really awesome and at the same time extremely challenging is that all team members are located in every possible place around the world.&lt;br /&gt;
In this post I will share my so far personal experience and some things I learned the hard way when it comes to manage global teams.
Let’s face the truth. Remote working is an increasing trend for several startups and ‘traditional’ companies. Personally I think that in the near future more and more companies will switch to this new model of recruiting. Hiring people globally decreases costs but it hides a lot of risks and difficulties, especially when it comes to manage all those remote workers. Here are some of the most important challenges I faced:&lt;/p&gt;

&lt;h5 id=&quot;different-cultures&quot;&gt;Different cultures&lt;/h5&gt;
&lt;p&gt;Everything I knew - or I believed I knew - about human relationships and the way that people handle common situations in a software development team collapsed from one day to another. You don’t know how people react when they hear something that you consider normal but to their ears doesn’t look the same way. The fact that you don’t speak your mother-tongue make things even more fragile. Words have different meaning in some languages and many phrases are not fully understood. To be honest, in the beginning I struggled a lot! After some time I found out that one of the keys to overcome this problem is politeness and clearness. Whatever you want to say, try to be polite, calm, confident about the message you want to pass and as much as clear you can.  It’s very likely that even if people are somehow offended from what you said, their reaction will be less hostile and they will be more willing to cooperate. You want also people to understand the full details - not just the general idea. We don’t write software by understanding the general requirements, right? We need the details!&lt;/p&gt;

&lt;h5 id=&quot;absence-of-face-to-face-communication&quot;&gt;Absence of face-to-face communication&lt;/h5&gt;
&lt;p&gt;One of the biggest problems I faced, especially in the beginning, was the fact there was no direct communication, no face-to-face meetings with the team members. How the heck was I supposed to manage all those guys? Fortunately the answer was in front of my eyes and I quickly realized that you can perfectly replace real meetings with virtual meetings. All you have to do is use the proper software, have a very good internet connection - this is very important for video calls - and finally setup periodical meetings. Daily meetings to catch current activities and remove possible roadblocks, weekly meetings for planning and demoing internally the progress and one meeting every month to demonstrate the status to stakeholders, product owners or whoever has interest on the product/project the team is working on. Yes, you are right, It seems to be a typical scrum meeting schedule with some adjustments. I made also very clear from the first day that everyone should attend the meetings, otherwise the team will not have the minimum level of communication.&lt;/p&gt;

&lt;h5 id=&quot;time-zones&quot;&gt;Time-zones&lt;/h5&gt;
&lt;p&gt;One of the teams I manage is composed of a developer located in Latin America, another one in China and another one in India. And me, I’m somewhere in the middle - Europe! Things can ge get even more complicated if you consider the fact that some of these developers have a “daily” /office job that reduces their availability to certain hours. Like I said, I needed to setup daily and weekly meetings. No silver bullet here. When you work remotely you have to accept the fact that some meetings might not be during the typical working hours. It’s one of the prices you have to pay for getting the flexibility of a remote worker.&lt;/p&gt;

&lt;h5 id=&quot;performance-evaluation&quot;&gt;Performance evaluation&lt;/h5&gt;
&lt;p&gt;People, by nature, lose easily focus. It’s even worse when you work in your home instead of a typical workplace environment. To avoid such awkward situations and make sure that all team members are productive you need to set goals. Team goals and individual goals. Weekly, monthly and quarterly goals. Goals should be clear to everyone. But the most critical part here is that goals should be quantifiable and objective. The way you measure them is shared to all team members and it cannot be disputed by anyone. Then you will be able to rank your developers and maybe replace the worst one ;)&lt;/p&gt;

&lt;h5 id=&quot;collaboration-tools&quot;&gt;Collaboration Tools&lt;/h5&gt;
&lt;p&gt;Meetings are good to keep team members synced and focused on their goals. However they cannot completely replace work at office . It turned out that in order to allow people to collaborate - just like the do in the office - we need tools. Fortunately we have a plethora of them. To be honest the tools that we use in a typical working environment perfectly fit in distributed teams. Starting from the typical ones : Issue tracking system, wiki platforms, code review systems and…. chatting rooms. The choice of the correct chatting / collaboration tool will probably make the difference. What I strongly recommend is slack. The reason? You can do exactly what you can with traditional chat systems like skype, msn etc. and additionally you can integrate with numerous external systems like google docs, jira, jenkins, github just to mention a few. Cool features like channels and private chat rooms with full search capabilities make it even more attractive. After working with slack for more many months I can’t imagine my life without all these information that can be found in one single place.&lt;/p&gt;

&lt;p&gt;Well, that was only the beginning and I could write a series of blogs for each challenge I faced or even a whole book - hey that’s a good idea! Who knows. Now that I’m a flexible remote worker I might find the time to write another book!&lt;/p&gt;

&lt;h4 id=&quot;did-you-enjoy-this-post&quot;&gt;Did you enjoy this post?&lt;/h4&gt;

&lt;p&gt;You can listen to more from Patroklos this September at SwanseaCon.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://swancon.co.uk/schedule/#session-5&quot;&gt;Managing global teams : Lessons learned&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Wed, 22 Jul 2015 21:43:18 +0100</pubDate>
        <link>http://swanseacon.github.io/blog/patroklos-papapetrou-managing-global-teams</link>
        <guid isPermaLink="true">http://swanseacon.github.io/blog/patroklos-papapetrou-managing-global-teams</guid>
      </item>
    
      <item>
        <title>Thomas Sundberg - Tell, don&#39;t ask</title>
        <description>&lt;h4 id=&quot;tell-dont-ask&quot;&gt;Tell, don’t ask.&lt;/h4&gt;

&lt;h5 id=&quot;why-talk-about-tell-dont-ask-at-swanseacon-2015&quot;&gt;Why talk about ‘Tell, don’t ask’ at Swanseacon 2015?&lt;/h5&gt;

&lt;p&gt;Objects that expose wrong information are complicated to work with. They force you to dig for the information you really need. It is easy to create a model where the users are expected to know a lot about the domain and therefore force them to dig deep into an object structure to get the information they currently need. This can be avoided if you strive for telling objects what to do and only ask them occasionally.&lt;/p&gt;

&lt;p&gt;Asking an object for something may or may not result in a direct answer. If you get a direct answer to your question, it’s usually not a problem with asking. But if you get another object back that you have to ask a more specific question and this object in turn returns yet another object that you need to inquire for the information you need, then you have a problem. A problem with code is that it is very tightly coupled. Objects are more or less tangled. Probably more. This may not seem as a problem if you know the code base very well, but it is unnecessarily complicated to understand how it should be used. A new developer will definitely have problems understanding the code base. It is also a very clear sign of missing abstractions. The initial object you asked for should have given you the answer to your question. If it doesn’t have the answer, it should have asked some of its collaborators and then responded to your question. Not force you to ask for the proper collaborator and then ask the returned collaborator for what you really want to know. Possibly in many steps.&lt;/p&gt;

&lt;p&gt;If you only tell objects what to do, it is a lot harder to tangle things together. It is also a lot easier to test. All you have to do is verify that the object you want to do something with has received a message that tells it what to do. This can easily be done with mocks that verify that a collaborator has been called.&lt;/p&gt;

&lt;p&gt;Telling an object what to do instead of asking it for information forces you to focus on the interaction between objects. You must think a lot about the protocol between the objects.&lt;/p&gt;

&lt;p&gt;Focusing on telling instead of asking is one technique to separate concerns and allows you to avoid making a spaghetti bolognese of your code base. Suppressing your chef ambitions when writing code is usually a good thing.&lt;/p&gt;

&lt;p&gt;It turns out that seasoned developers sometimes don’t understand this concept. I have worked in a team where I found a code base mostly created by an supposedly experienced developer who, it turned out, either was too smart and could remember all connections between the objects or too stupid to understand that it was hard to grasp. It was a green field project that ended up with a lot of performance issues that were hard to resolve. The tangled code was not the main reason for the performance issues, but it didn’t help when we struggled to resolve them. Changing a tangled codebase is difficult and it became unnecessarily difficult to re-write the parts that had performance problems.&lt;/p&gt;

&lt;p&gt;Why do I want to talk about this at Swansea? Interaction between objects is the single most important thing in object-oriented programming. Unfortunately, some developers neglect it. I expect that there will be a lot of developers at a conference about Agile Development and Software craftsmanship. Some of them might need to be reminded about the Law of Demeter.&lt;/p&gt;

&lt;h4 id=&quot;did-you-enjoy-this-post&quot;&gt;Did you enjoy this post?&lt;/h4&gt;

&lt;p&gt;You can listen to more from Thomas this September at SwanseaCon.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://swancon.co.uk/schedule/#session-13&quot;&gt;Tell, don’t ask&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Tue, 05 May 2015 12:18:18 +0100</pubDate>
        <link>http://swanseacon.github.io/blog/thomas-sundberg-tell-dont-ask</link>
        <guid isPermaLink="true">http://swanseacon.github.io/blog/thomas-sundberg-tell-dont-ask</guid>
      </item>
    
      <item>
        <title>Adam Tornhill - There&#39;s More to Code than Code</title>
        <description>&lt;h4 id=&quot;theres-more-to-code-than-code&quot;&gt;There’s more to code than code&lt;/h4&gt;

&lt;p&gt;Our software industry is good at exploring new ways to do things. If you’ve been around for a while you’ve probably seen your fair share of trends come and go. These trends are reactions to past failures. We push the pendulum from one extreme to the next. Yesterday’s silver bullet is tomorrow’s legacy code. Right now microservices are all the rage. In a few years we’ll see a counter reaction as we discover that the complexity is still there, only now it’s distributed as well.&lt;/p&gt;

&lt;p&gt;In our rush to improve we often miss the most fundamental component of any successful software design: the people who built it. It’s my firm belief that if we want to truly improve as an industry, we need to understand the interaction between people and code. How our code affects us and how we, as an organization, affect the code we write.&lt;/p&gt;

&lt;p&gt;Until now, this traditionally softer side of, well, software has been left to subjective judgments. Expert judgments, perhaps, but nonetheless at risk for cognitive and social biases. What if we could guide those decisions with objective data instead? What if we could get a social view of our codebase?&lt;/p&gt;

&lt;p&gt;We don’t know what the future may hold. But we’ll be well prepared for it if we can understand where we, and our code, stand today. Let’s explore that direction.&lt;/p&gt;

&lt;h4 id=&quot;a-software-architecture-is-a-social-design&quot;&gt;A software architecture is a social design&lt;/h4&gt;

&lt;p&gt;First of all, it’s impossible to separate technology decisions from people; Any software architecture is as much a social design as it is a technical one. That’s a good thing because it means we, as developers, can optimize for what matters the most.&lt;/p&gt;

&lt;p&gt;But most of the time we aren’t designing new software architectures. We have existing systems that we need to maintain, improve and evolve. This is challenging enough from a technical point of view. So what would it mean if we add a social axis too? Follow along and explore an alternate reality where we get the information we need to make both technical and social decisions.&lt;/p&gt;

&lt;h4 id=&quot;move-beyond-code&quot;&gt;Move beyond code&lt;/h4&gt;

&lt;p&gt;Pretend for a moment that you join a new organization. Like most companies in our industry their codebase is a mixed bag. Some parts look good, you’re even tempted to say “elegant”. Others are more like a scary monster riddled with “temporary” solutions, workarounds and important business logic mixed together with seemingly random chunks of accidental complexity. How do you start to make sense of it? Which parts are the most important? What do you need to understand first? Where are the key components? And, who do you ask when you want to understand why a ‘userId’ field is “re-used” to represent a time-stamp in some interactions but not others?&lt;/p&gt;

&lt;p&gt;Now, let’s pretend for a moment that you are handed a complete map of the system. You notice immediately that it’s not your typical diagram of wild boxes and cylinders connected by bold dashed lines. Instead it looks more like a topography that shows the distribution of complexity in the codebase together with information on the relative importance of each part. You’re told that the map is generated from how the team has actually worked with the codebase, so you know it’s closer to reality than what most documentation is. Sweet - now you know which components you need to grasp first and where the scariest parts are. That drives your learning.&lt;/p&gt;

&lt;p&gt;In addition you get a view of the typical change patterns in the system. You see that each change to the GUI leads to a predictable change to a stored procedure in the database. That’s good to know. It seems like an architectural principle, yes - a questionable one, but important to know about nonetheless. You speculate that this information could be used to highlight technical debt in the codebase; If different sub-systems need to change together, doesn’t that mean there’s a missing abstraction? Why are they so tightly coupled in time? Wow - this information really helps you ask the right questions.&lt;/p&gt;

&lt;p&gt;But why stop there? Let’s say you get a second map as well. If the first map showed the geography of the system, this second map illustrates the knowledge distribution. It’s a map that immediately points you to the developer that knows the most about a certain module or sub-system. You realize that you no longer need to haunt the halls of the corporation, be sent from door to door to track down someone able to answer your question. Instead you just look at your map and know who you should communicate with. You realize that the information isn’t perfect - abstractions of complex systems never are - but it works surprisingly well in practice.&lt;/p&gt;

&lt;h4 id=&quot;explore-the-social-side-of-your-codebase&quot;&gt;Explore the social side of your codebase&lt;/h4&gt;

&lt;p&gt;Once you have all that information you notice that you can do so much more by combining it. Let’s see: you know about the change patterns in your codebase. You also know about the knowledge distribution in the code. Hmmm, that’s both technical and social information there. If we combine them, we should be able to spot organizational problems that we’d normally mistake for technical issues. How cool isn’t that! And if we instead map out the knowledge distribution on a team level and then look for change patterns that cross those team boundaries then, well, we’d finally have a way to measure how well aligned we are with Conway’s Law. That would be powerful stuff. And yet it just feels as a starting point. You know that you can do so much more with this data.&lt;/p&gt;

&lt;h4 id=&quot;turn-the-vision-into-reality&quot;&gt;Turn the vision into reality&lt;/h4&gt;

&lt;p&gt;I hope you enjoyed our thought-experiment. Wouldn’t it be great to have access to those tools and techniques on your own projects? In the real world? On the 8th of September at 11:35 you’ll see how &lt;a href=&quot;http://swancon.co.uk/schedule/#session-17&quot;&gt;Treat Your Code as a Crime Scene&lt;/a&gt; delivers that reality. It’s a new way to view code that will change how you work with legacy systems. Join me on this fascinating ride!&lt;/p&gt;

&lt;h4 id=&quot;did-you-enjoy-this-post&quot;&gt;Did you enjoy this post?&lt;/h4&gt;

&lt;p&gt;Adam has recorded a video explaining a bit about his upcoming talk in this video. &lt;a href=&quot;https://www.youtube.com/watch?v=5t-G29DdON0&quot;&gt;View Adams video here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;You can listen to more from Adam this September at SwanseaCon.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://swancon.co.uk/schedule/#session-17&quot;&gt;Treat your Code as a Crime Scene&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Tue, 05 May 2015 12:18:18 +0100</pubDate>
        <link>http://swanseacon.github.io/blog/adam-tornhill-theres-more-to-code-than-code</link>
        <guid isPermaLink="true">http://swanseacon.github.io/blog/adam-tornhill-theres-more-to-code-than-code</guid>
      </item>
    
      <item>
        <title>Jiri Knesl - Should we use an existing agile methodology or create our own?</title>
        <description>&lt;h4 id=&quot;should-we-use-an-existing-agile-methodology-or-create-our-own&quot;&gt;Should we use an existing agile methodology or create our own?&lt;/h4&gt;

&lt;p&gt;Picking a programming language, platform, and framework are key things that largely influence your development efforts. And for frameworks you have an important question: do you use an existing one or make your own?&lt;/p&gt;

&lt;p&gt;When you use an existing framework you feel in control of the source code. Is this right? Sure, of course.&lt;/p&gt;

&lt;p&gt;When using an existing framework do you have control? Many answer no but that’s silly. You can make changes to the source code (but face the bitter price of possibly losing the ability to upgrade the framework)&lt;/p&gt;

&lt;p&gt;The next advantage of an existing framework is that it is already used. Those tons of bugs were already found and fixed. Sometimes though this comes at a price - higher complexity or lower performance.&lt;/p&gt;

&lt;p&gt;All those things are valid for management methodologies as well. You can use yours or others. You have control. You can change it. With an existing methodology you don’t have to fix those bugs (yes, methodologies have bugs too).&lt;/p&gt;

&lt;p&gt;The problem is when you pick a bad framework (bad methodology). Or when you develop your framework made to measure of your business and the market, technologies or people change. In this case using the same framework (same methodology) is like having a ball and chain. Your own chain and your own ball. Still you stick to something that doesn’t deserve it.&lt;/p&gt;

&lt;p&gt;It is more difficult to succeed with your framework (your methodology) than you expect. I have studied frameworks for the last 8 years. Still never tried to write one.  I have studied agile methodologies for as many years too. I made methodologies for my clients. I did lots of mistakes. Now I am aware what’s necessary. Still I don’t believe there’s any Holy Grail, best framework, best methodology for all the people and forever. You still have to react.&lt;/p&gt;

&lt;p&gt;But there are best practices:&lt;/p&gt;

&lt;p&gt;To have successful framework you need:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Very good common stuff - a framework is abstraction of a programming approach. You need experience to be able to abstract. In my opinion frameworks can be developed only by people with lots of hands-on experience. If you are a junior developer it’s better to practice writing applications or libraries.&lt;/li&gt;
  &lt;li&gt;Great documentation - a framework’s vital part is great documentation. If you’re not able to write and maintain documentation you lost. Open Source framework is without chance. An in-company framework without documentation will lead to high expenses to teach new colleagues.&lt;/li&gt;
  &lt;li&gt;Have a good programming style - even if you develop software for a very, very, long time you don’t have to be one of those who writes beautiful source code. When you have a bad style nobody will like using and changing your source code. Most developers read code more than write it. Even when you are an ingenious mathematician and developer, still nobody will use it.&lt;/li&gt;
  &lt;li&gt;Have endurance - it’s a marathon to develop a framework. Maybe you don’t realize how difficult it is. All those problems and special cases to catch before you’ll be able to solve the problem. It’ll be months to something useful and stable.&lt;/li&gt;
  &lt;li&gt;To be a great programmer - it takes experience, a good programming style and many other things which will make you a great developer. All people in a company rely on a framework. If you make a security bug in a framework then all framework users have that security bug, think about it.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;It’s a similar story for methodologies:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;You must know what works over time - a framework must survive longer then paradigms in fashion last two months methodology must survive too.&lt;/li&gt;
  &lt;li&gt;You must know how to describe it - all principles you put into the methodology must be described and bond to real situations. All the people in the team must know what to do and how to solve different situations.&lt;/li&gt;
  &lt;li&gt;People have to enjoy the methodology - people have to connect to the values and principles. There should be advocates of the methodology who will fight for it, think about it and improve it to an organization’s need. It’s not simple.&lt;/li&gt;
  &lt;li&gt;The methodology must persist even if it’s changed all the time - in our age we are facing constant change. You must run to stay on one place. But when you change the methodology basic principles should be vital after years and should help the company to prosper.&lt;/li&gt;
  &lt;li&gt;You must know how to make managerial methodologies - it’s the same as programming. It’s not simpler than making any other system. How many years you develop software and improve in SW development? And how many years you make methodologies and improve in understanding of organization of people and work? It is the same but instead of algorithms, data structures, security, testing you have culture, microeconomics, operation management, HR, strategy, R&amp;amp;D and so on.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;You can be lucky and create a great company with a strong culture, the right people and you won’t have to try to build or use any special methodology. Even all those successful methodologies were created somewhere, right? But I believe it’s improbable.&lt;/p&gt;

&lt;p&gt;If you don’t have those skills use an existing framework (methodology).&lt;/p&gt;

&lt;p&gt;Or find someone who knows how to develop successful frameworks (methodologies).&lt;/p&gt;

&lt;p&gt;Or spend years and learn how to write frameworks (create methodologies) on your own.&lt;/p&gt;

&lt;h4 id=&quot;did-you-enjoy-this-post&quot;&gt;Did you enjoy this post?&lt;/h4&gt;

&lt;p&gt;You can listen to more from Jiri this September at SwanseaCon.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://swancon.co.uk/schedule/#session-11&quot;&gt;How to use Theory of Constraints to scale big agile development teams?&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Mon, 20 Apr 2015 08:00:00 +0100</pubDate>
        <link>http://swanseacon.github.io/blog/jiri-knesl-should-we-use-an-existing-agile-methodology-or-create-our-own</link>
        <guid isPermaLink="true">http://swanseacon.github.io/blog/jiri-knesl-should-we-use-an-existing-agile-methodology-or-create-our-own</guid>
      </item>
    
      <item>
        <title>Early bird tickets now on sale!</title>
        <description>&lt;p&gt;While we’re still running through speaker submissions and trying to finalise an agenda we’ve decided to give you lucky lot a chance to save £200 off a standard conference ticket!&lt;/p&gt;

&lt;p&gt;If you purchase a ticket before 31st March 2015 you will be able to save £200 and snap up a ticket for just £250. After 31st March 2015 ticket prices will increase, so grab a bargain today.&lt;/p&gt;

&lt;p&gt;More details about speakers, agenda and tickets will appear in subsequent posts. In the meantime like us on &lt;a href=&quot;https://www.facebook.com/swanseacon&quot;&gt;Facebook&lt;/a&gt;, follow on &lt;a href=&quot;https://twitter.com/SwanseaCon&quot;&gt;Twitter&lt;/a&gt;, add to circles in &lt;a href=&quot;https://plus.google.com/u/1/105624973822199981487&quot;&gt;Google+&lt;/a&gt; or subcribe to our &lt;a href=&quot;//swancon.us10.list-manage.com/subscribe/post?u=6f529863589ed3eabebff1faf&amp;amp;id=ac260fb163&quot;&gt;mailing list&lt;/a&gt; in order not to miss any cool stuff about the conference.&lt;/p&gt;
</description>
        <pubDate>Sun, 01 Mar 2015 07:00:00 +0000</pubDate>
        <link>http://swanseacon.github.io/blog/early-bird-tickets-now-on-sale</link>
        <guid isPermaLink="true">http://swanseacon.github.io/blog/early-bird-tickets-now-on-sale</guid>
      </item>
    
      <item>
        <title>Call for papers is now closed</title>
        <description>&lt;p&gt;We’re very excited - not just because of the inordinate amount of caffeine based products consumed -
but also because we are currently putting together
an agenda for the biggest Agile Development &amp;amp; Software Craftsmanship  related event in Wales - &lt;a href=&quot;http://swancon.co.uk/&quot;&gt;SwanseaCon 2015&lt;/a&gt;. The response for our first call for papers for SwanseaCon 2015 was fantastic, around 70 papers were submitted from speakers from all around the world.&lt;/p&gt;

&lt;p&gt;The two day conference will take place in the costal city of Wales - Swansea. Swansea is Wales’ Waterfront City. It sits on the sandy five mile stretch of Swansea Bay beach and is a great base for exploring the best of South-West Wales - UK. So take your time in Swansea, the heart of Wales, in the company of experts and technical geeks.&lt;/p&gt;

&lt;p&gt;So should you also be excited? Well yes… and here’s why!&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Attendance&lt;/strong&gt;: we’re expecting over 200 attendees&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Topic&lt;/strong&gt;: more than 30 hours of agile development &amp;amp; software craftsmanship&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Date&lt;/strong&gt;: 7-8 of September, expect a two day technical conference&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Venue&lt;/strong&gt;: Swansea - we’re in the process of finalising the venue which will be in the heart of the costal city of Swansea&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Speakers&lt;/strong&gt;: more than 25 world class speakers&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;but we’ve already secured a first batch of experts:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Sandro Mancuso&lt;/strong&gt; - Software Craftsman, author, speaker, founder of the London Software Craftsmanship Community.&lt;br /&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Janos Feher&lt;/strong&gt; - Lead Developer at Intern Avenue&lt;br /&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Simon Brown&lt;/strong&gt; - Author of “Software Architecture for Developers”, speaker, coder, creator of the c4 software architecture model and @structurizr&lt;br /&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Jason Gorman&lt;/strong&gt; - Programmer &amp;amp; trainer at Codemanship&lt;br /&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Sander Hoogendoorn&lt;/strong&gt; - Software Architect, programmer, writer and speaker&lt;br /&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Steve Tooke&lt;/strong&gt; - Independent programmer, trainer and coach.&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;More details about speakers, agenda and tickets will appear in subsequent posts. In the meantime like us on &lt;a href=&quot;https://www.facebook.com/swanseacon&quot;&gt;Facebook&lt;/a&gt;, follow on &lt;a href=&quot;https://twitter.com/SwanseaCon&quot;&gt;Twitter&lt;/a&gt;, add to circles in &lt;a href=&quot;https://plus.google.com/u/1/105624973822199981487&quot;&gt;Google+&lt;/a&gt; or subcribe to our &lt;a href=&quot;//swancon.us10.list-manage.com/subscribe/post?u=6f529863589ed3eabebff1faf&amp;amp;id=ac260fb163&quot;&gt;mailing list&lt;/a&gt; in order not to miss any cool stuff about the conference.&lt;/p&gt;
</description>
        <pubDate>Thu, 19 Feb 2015 08:00:00 +0000</pubDate>
        <link>http://swanseacon.github.io/blog/call-for-papers-now-closedy</link>
        <guid isPermaLink="true">http://swanseacon.github.io/blog/call-for-papers-now-closedy</guid>
      </item>
    
      <item>
        <title>Call for Papers</title>
        <description>&lt;p&gt;SwanseaCon 2015 will be held 7th-8th of September in the coastal city of Swansea. If you want to be part of this great event as a speaker you knocked at the good door.&lt;/p&gt;

&lt;h4 id=&quot;want-to-speak-at-swanseacon&quot;&gt;Want to speak at SwanseaCon?&lt;/h4&gt;

&lt;p&gt;If you would like to submit a paper, please complete the form below.&lt;/p&gt;

&lt;p&gt;All papers should:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;aim to be a maximum of 45 minutes in length&lt;/li&gt;
  &lt;li&gt;need to be covering the technical side of agile development or software craftsmanship.&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;please-submit-your-proposals-here&quot;&gt;Please submit your proposals here.&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;Deadline&lt;/strong&gt; is February 15, 2015&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Please note:&lt;/strong&gt; There is no guarantee that a submission will be put onto the conference agenda!&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;SwanseaCon picks the most interesting talk proposals and will inform the selected submitters shortly after.&lt;br /&gt;&lt;/p&gt;

&lt;h4 id=&quot;any-questions&quot;&gt;Any questions?&lt;/h4&gt;
&lt;p&gt;Email organizers at &lt;a href=&quot;&amp;#109;&amp;#097;&amp;#105;&amp;#108;&amp;#116;&amp;#111;:&amp;#104;&amp;#101;&amp;#108;&amp;#108;&amp;#111;&amp;#064;&amp;#115;&amp;#119;&amp;#097;&amp;#110;&amp;#099;&amp;#111;&amp;#110;&amp;#046;&amp;#099;&amp;#111;&amp;#046;&amp;#117;&amp;#107;&quot;&gt;&amp;#104;&amp;#101;&amp;#108;&amp;#108;&amp;#111;&amp;#064;&amp;#115;&amp;#119;&amp;#097;&amp;#110;&amp;#099;&amp;#111;&amp;#110;&amp;#046;&amp;#099;&amp;#111;&amp;#046;&amp;#117;&amp;#107;&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Mon, 17 Nov 2014 09:00:00 +0000</pubDate>
        <link>http://swanseacon.github.io/blog/call-for-papers</link>
        <guid isPermaLink="true">http://swanseacon.github.io/blog/call-for-papers</guid>
      </item>
    
  </channel>
</rss>
